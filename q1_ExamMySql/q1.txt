===========================================================================================================================
Data Analytics & Visualization Exam
===========================================================================================================================

Question 1 - MySQL Databases
***************************************************************************************************************************

create database sekolahku;

create table users (
    -> Id int auto_increment,
    -> Username varchar(50) not null,
    -> Email varchar(50) not null,
    -> Password varchar(50) not null,
    -> created_at timestamp default current_timestamp,
    -> updated_at timestamp default current_timestamp on update current_timestamp,
    -> primary key(id));

insert into users (Username,Email,Password) values
    -> ('Andi','andi@andi.com','12345'),
    -> ('Budi','budi@budi.com','67890'),
    -> ('Caca','caca@caca.com','abcde'),
    -> ('Deni','deni@deni.com','fghij'),
    -> ('Euis','euis@euis.com','klmno'),
    -> ('Fafa','fafa@fafa.com','pqrst');

create table courses (
    -> id int not null auto_increment,
    -> course varchar(50) not null,
    -> mentor varchar(50) not null,
    -> title varchar(50) not null),
    -> primary key (id));

insert into courses (course,mentor,title) values
    -> ('C++','Ari','Dr.'),
    -> ('C#','Ari','Dr.'),
    -> ('C','Ari','Dr.'),
    -> ('CSS','Cania','S.Kom'),
    -> ('HTML','Cania','S.Kom'),
    -> ('Javascript','Cania','S.Kom'),
    -> ('Python','Barry','S.T.'),
    -> ('Micropython','Barry','S.T.'),
    -> ('Java','Darren','M.T.'),
    -> ('Ruby','Darren','M.T.');

create table userCourse ( id_user int, id_course int);

insert into userCourse (id_user,id_course) values
    -> ('1','1'),
    -> ('1','2'),
    -> ('1','3'),
    -> ('2','4'),
    -> ('2','5'),
    -> ('2','6'),
    -> ('3','7'),
    -> ('3','8'),
    -> ('3','9'),
    -> ('4','1'),
    -> ('4','3'),
    -> ('4','5'),
    -> ('5','2'),
    -> ('5','4'),
    -> ('5','6'),
    -> ('6','7'),
    -> ('6','8'),
    -> ('6','9');

select users.id,Username,course,mentor,title
    -> from users,userCourse,courses
    -> where users.id=id_user and courses.id=id_course;

select users.id, Username,course,mentor,title 
    -> from users,userCourse,courses
    -> where users.id = id_user and courses.id = id_course and title in ('S.T.','S.Kom');

select users.id, Username,course,mentor,title 
    -> from users,userCourse,courses 
    -> where users.id = id_user and courses.id = id_course and title != 'S.T.' and title != 'S.Kom';

select course,count(course) as jumlah_peserta 
    -> from users,userCourse,courses 
    -> where users.id = id_user and courses.id = id_course group by course having count(course)>1;

select course,count(course) as jumlah_peserta,
    ->      mentor
    -> from users,userCourse,courses
    -> where users.id = id_user and courses.id = id_course
    -> group by course,
    ->      mentor
    -> having count(course) >1;

select mentor,count(mentor) as jumlah_peserta
    -> from users,userCourse,courses
    -> where users.id =id_user and courses.id = id_course
    -> group by mentor
    -> having count(mentor)>1;

select mentor,count(mentor) as jumlah_peserta, 
    count(mentor)*2000000 as total_fee 
from users,
    userCourse,
    courses 
where users.id = id_user and 
    courses.id = id_course 
group by mentor 
having count(mentor)>1;